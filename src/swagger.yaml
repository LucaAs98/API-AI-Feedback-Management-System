openapi: 3.0.0
info:
  title: Ai Feedback Management System API
  version: '1.0'

paths:
  /feedback:
    get:
      tags: [Feedback]
      summary: Get all feedbacks
      description: Retrieve a list of all feedbacks submitted by users.
      responses:
        '200':
          description: A list of feedbacks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    user_id:
                      type: integer
                      example: 123
                    feedback_text:
                      type: string
                      example: 'This is a feedback message.'
                    feedback_time:
                      type: string
                      format: date-time
                      example: '2024-10-08T12:34:56Z'
                    response_time:
                      type: bigint
                      format: date-time
                      nullable: true
                      example: '2024-10-08T12:34:56Z'
                    sentiment:
                      type: string
                      enum: [POSITIVE, NEGATIVE, NEUTRAL, MIXED]
                      nullable: true
                      example: 'POSITIVE'
                    positive_score:
                      type: number
                      format: float
                      nullable: true
                      example: 0.9996839761734009
                    negative_score:
                      type: number
                      format: float
                      nullable: true
                      example: 0.00005056627560406923
                    neutral_score:
                      type: number
                      format: float
                      nullable: true
                      example: 0.000262411602307111
                    mixed_score:
                      type: number
                      format: float
                      nullable: true
                      example: 0.000003055851038880064
    post:
      tags: [Feedback]
      summary: Create new feedback
      description: Submit a new feedback.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 123
                feedback_text:
                  type: string
                  example: 'This is a new feedback message.'
                sentiment:
                  type: string
                  enum: [POSITIVE, NEGATIVE, NEUTRAL, MIXED]
                  nullable: true
                  example: 'POSITIVE'
                positive_score:
                  type: number
                  format: float
                  nullable: true
                  example: 0.9996839761734009
                negative_score:
                  type: number
                  format: float
                  nullable: true
                  example: 0.00005056627560406923
                neutral_score:
                  type: number
                  format: float
                  nullable: true
                  example: 0.000262411602307111
                mixed_score:
                  type: number
                  format: float
                  nullable: true
                  example: 0.000003055851038880064
      responses:
        '201':
          description: Feedback created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  user_id:
                    type: integer
                    example: 123
                  feedback_text:
                    type: string
                    example: 'This is a new feedback message.'
                  feedback_time:
                    type: string
                    format: date-time
                    example: '2024-10-08T12:34:56Z'
                  response_time:
                    type: bigint
                    format: date-time
                    nullable: true
                    example: null
                  sentiment:
                    type: string
                    enum: [POSITIVE, NEGATIVE, NEUTRAL, MIXED]
                    nullable: true
                    example: 'POSITIVE'
                  positive_score:
                    type: number
                    format: float
                    nullable: true
                    example: 0.9996839761734009
                  negative_score:
                    type: number
                    format: float
                    nullable: true
                    example: 0.00005056627560406923
                  neutral_score:
                    type: number
                    format: float
                    nullable: true
                    example: 0.000262411602307111
                  mixed_score:
                    type: number
                    format: float
                    nullable: true
                    example: 0.000003055851038880064
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /user:
    get:
      summary: Retrieve a list of users
      tags: [User]
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    email:
                      type: string
                      example: user@example.com
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Doe
        500:
          description: Internal server error
    post:
      summary: Create a new user
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: password123
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
      responses:
        201:
          description: User created successfully
        400:
          description: Invalid input
        500:
          description: Internal server error

components:
  schemas:
    Feedback:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the feedback
          example: 1
        user_id:
          type: integer
          description: ID of the user who submitted the feedback
          example: 123
        feedback_text:
          type: string
          description: The feedback text submitted by the user
          example: 'This is a feedback message.'
        feedback_time:
          type: string
          format: date-time
          description: Timestamp when the feedback was submitted
          example: '2024-10-08T12:34:56Z'
        response_time:
          type: integer
          nullable: true
          description: Time taken to respond to the feedback (in seconds) (optional)
          example: 120
        sentiment:
          type: string
          nullable: true
          description: Sentiment analysis result of the feedback (optional)
          enum: [POSITIVE, NEGATIVE, NEUTRAL, MIXED]
          example: 'POSITIVE'
        positive_score:
          type: number
          format: float
          nullable: true
          description: Confidence score for positive sentiment (optional)
          example: 0.9996839761734009
        negative_score:
          type: number
          format: float
          nullable: true
          description: Confidence score for negative sentiment (optional)
          example: 0.00005056627560406923
        neutral_score:
          type: number
          format: float
          nullable: true
          description: Confidence score for neutral sentiment (optional)
          example: 0.000262411602307111
        mixed_score:
          type: number
          format: float
          nullable: true
          description: Confidence score for mixed sentiment (optional)
          example: 0.000003055851038880064
        user:
          $ref: '#/components/schemas/User'
          description: Reference to the user who provided the feedback
    User:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the user
          example: 1
        email:
          type: string
          format: email
          description: User's email address
          example: 'user@example.com'
        password_hash:
          type: string
          description: Hashed password for the user
          example: '$2b$10$8sGzIqerUAOiF59QFZZ2Be3jK9wsltZKtNB2bqL7UEK3OWgjjiD3y'
        first_name:
          type: string
          description: First name of the user
          example: 'John'
        last_name:
          type: string
          description: Last name of the user
          example: 'Doe'
        birth_date:
          type: string
          format: date
          description: User's birth date (optional)
          example: '1990-01-01'
        phone:
          type: string
          description: User's phone number (optional)
          example: '+1234567890'
        profile_picture:
          type: string
          description: URL to the user's profile picture (optional)
          example: 'https://example.com/images/profile.jpg'
        content_preferences:
          type: string
          description: User's content preferences (optional)
          example: 'sports,technology'
        account_status:
          type: string
          description: Status of the user account (active/inactive)
          example: 'active'
        registration_date:
          type: string
          format: date-time
          description: Date when the user registered
          example: '2024-01-01T12:34:56Z'
        last_access:
          type: string
          format: date-time
          description: Last time the user accessed the system
          example: '2024-10-08T12:34:56Z'
        two_factor_enabled:
          type: boolean
          description: Whether two-factor authentication is enabled
          example: false
        password_reset_token:
          type: string
          description: Token for resetting the user's password (optional)
          example: 'e3a1d4f9-49a4-4c88-82e3-1c5b5d57c3b5'
        feedback:
          type: array
          description: List of feedbacks submitted by the user
          items:
            $ref: '#/components/schemas/Feedback'
